# Quick Start Azure Pipeline for OneView React
# Ready-to-use pipeline with minimal configuration required

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  nodeVersion: '20.x'

stages:
- stage: Build
  jobs:s
  - job: Build
    steps:
    # Setup Node.js
    - task: NodeTool@0
      displayName: 'Setup Node.js'
      inputs:
        versionSpec: '$(nodeVersion)'

    # Install dependencies
    - script: npm ci
      displayName: 'Install dependencies'

    # Build application
    - script: npm run build
      displayName: 'Build OneView React'

    # Copy configuration files
    - script: |
        if [ -f "web.config" ]; then cp web.config dist/; fi
        if [ -f "staticwebapp.config.json" ]; then cp staticwebapp.config.json dist/; fi
        if [ -d "api" ]; then cp -r api dist/; fi
      displayName: 'Copy config files'

    # Archive build
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: 'dist'
        includeRootFolder: false
        archiveFile: '$(Build.ArtifactStagingDirectory)/oneview-react.zip'

    # Publish artifacts
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: 'build'

- stage: Deploy
  dependsOn: Build
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  jobs:
  - deployment: Deploy
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          # Download artifacts
          - download: current
            artifact: build

          # Deploy to Azure Static Web Apps
          - task: AzureStaticWebApp@0
            inputs:
              azure_static_web_apps_api_token: '$(AZURE_STATIC_WEB_APPS_API_TOKEN)'
              repo_token: '$(System.AccessToken)'
              action: 'upload'
              app_location: '$(Pipeline.Workspace)/build'
              skip_app_build: true
